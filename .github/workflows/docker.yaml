name: Docker

on:
  workflow_dispatch:
  push:
    branches: [ test ]


# env:
#   ALIYUN_REGISTRY: "${{ secrets.ALIYUN_REGISTRY }}"
#   ALIYUN_NAME_SPACE: "${{ secrets.ALIYUN_NAME_SPACE }}"
#   ALIYUN_REGISTRY_USER: "${{ secrets.ALIYUN_REGISTRY_USER }}"
#   ALIYUN_REGISTRY_PASSWORD: "${{ secrets.ALIYUN_REGISTRY_PASSWORD }}"

jobs:

  build:
    name: Pull
    runs-on: ubuntu-latest
    steps:

    - name: Build and push image Aliyun
      run: |
        # 初始化变量
        TAGS_ARRAY=()

        while IFS= read -r line || [ -n "$line" ]; do
            
            NEXT_URL="https://hub.docker.com/v2/repositories/library/$line/tags?name=&ordering=last_updated&page=1&page_size=10"  # 初始URL
  
            # 递归获取所有分页数据
            while [ "$NEXT_URL" != "null" ]; do
              echo "Fetching: $NEXT_URL"
              
              # 发送请求并获取响应
              RESPONSE=$(curl -s -f "$NEXT_URL" || exit 1)
              
              # 解析当前页的 name 和 next
              CURRENT_NAMES=$(echo "$RESPONSE" | jq -r '.results[].name')
              NEXT_URL=$(echo "$RESPONSE" | jq -r '.next')
              
              # 添加到数组
              TAGS_ARRAY+=($CURRENT_NAMES)
              echo "Current batch: $CURRENT_NAMES"
            done
    
            # 输出结果
            echo "All tags:"
            printf '%s\n' "${TAGS_ARRAY[@]}"
            
            # # 转换为JSON数组并存储到输出变量
            # TAGS_JSON=$(jq -nc '$ARGS.positional' --args "${TAGS_ARRAY[@]}")
            # echo "::set-output name=tags_json::$TAGS_JSON"
            # echo "TAGS_JSON=${TAGS_JSON}" >> $GITHUB_ENV
            
            
            
            
            
            # # 忽略空行与注释
            # [[ -z "$line" ]] && continue
            # if echo "$line" | grep -q '^\s*#'; then
            #     continue
            # fi
            
            # # 获取镜像的完整名称，例如kasmweb/nginx:1.25.3（命名空间/镜像名:版本号）
            # image=$(echo "$line" | awk '{print $NF}')
            # # 将@sha256:等字符删除
            # image="${image%%@*}"
            # echo "#### 1 ==== image $image"
            # # 获取镜像名:版本号  例如nginx:1.25.3
            # image_name_tag=$(echo "$image" | awk -F'/' '{print $NF}')
            # echo "#### 2 ==== image_name_tag $image_name_tag"
            # # 获取命名空间 例如kasmweb,  这里有种特殊情况 docker.io/nginx，把docker.io当成命名空间，也OK
            # name_space=$(echo "$image" | awk -F'/' '{if (NF==3) print $2; else if (NF==2) print $1; else print ""}')
            # echo "#### 3 ==== name_space: $name_space"
            # # 这里不要是空值影响判断
            # name_space="${name_space}_"
            # # 获取镜像名例如nginx
            # image_name=$(echo "$image_name_tag" | awk -F':' '{print $1}')
            # echo "#### 4 ==== image_name: $image_name"
            
            # # 如果镜像存在于数组中，则添加temp_map
            # if [[ -n "${temp_map[$image_name]}" ]]; then
            #      # 如果temp_map已经存在镜像名，判断是不是同一命名空间
            #      if [[ "${temp_map[$image_name]}" != $name_space  ]]; then
            #         echo "#### 5 ==== duplicate image name: $image_name"
            #         duplicate_images[$image_name]="true"
            #      fi
            # else
            #     # 存镜像的命名空间
            #     temp_map[$image_name]=$name_space
            # fi       
        done < images.txt


        
       
